import React from "react";
import { WrappedComponentProps } from "react-intl";
import { IWorkspaceUsersQueryOptions } from "@gooddata/sdk-backend-spi";
import { IScheduleEmailRecipient } from "../../interfaces";
export interface IRecipientsSelectRendererOwnProps {
    /**
     * Author of the scheduled email - is always recipient of the scheduled email.
     */
    currentUser: IScheduleEmailRecipient;
    /**
     * Currently selected recipients.
     */
    value: IScheduleEmailRecipient[];
    /**
     * Recipients to display in the autocomplete.
     */
    options: IScheduleEmailRecipient[];
    /**
     * Allow multiple recipients to select?
     */
    isMulti?: boolean;
    /**
     * Callback to be called, when recipients are changed.
     */
    onChange?: (selectedUsers: IScheduleEmailRecipient[]) => void;
    /**
     * Callback to load autocomplete options.
     */
    onLoad?: (queryOptions?: IWorkspaceUsersQueryOptions) => void;
    /**
     * Show autocomplete loading indicator?
     */
    isLoading?: boolean;
    /**
     * Has user canListUsersInProject permission?
     */
    canListUsersInProject?: boolean;
}
declare type IRecipientsSelectRendererProps = IRecipientsSelectRendererOwnProps & WrappedComponentProps;
export declare const RecipientsSelectRenderer: React.FC<import("react-intl").WithIntlProps<IRecipientsSelectRendererProps>> & {
    WrappedComponent: React.ComponentType<IRecipientsSelectRendererProps>;
};
export {};
//# sourceMappingURL=RecipientsSelectRenderer.d.ts.map