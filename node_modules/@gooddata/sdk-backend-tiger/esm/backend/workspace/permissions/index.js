import { __awaiter, __generator } from "tslib";
var TigerWorkspacePermissionsFactory = /** @class */ (function () {
    function TigerWorkspacePermissionsFactory(authCall, workspace) {
        this.authCall = authCall;
        this.workspace = workspace;
    }
    TigerWorkspacePermissionsFactory.prototype.getPermissionsForCurrentUser = function () {
        return __awaiter(this, void 0, void 0, function () {
            var response, permissions, _a, canViewWorkspace, canAnalyzeWorkspace, canManageWorkspace;
            var _this = this;
            return __generator(this, function (_b) {
                switch (_b.label) {
                    case 0: return [4 /*yield*/, this.authCall(function (client) {
                            return client.axios.get("/api/entities/workspaces/" + _this.workspace + "?metaInclude=permissions");
                        })];
                    case 1:
                        response = _b.sent();
                        permissions = response.data.data.meta.permissions;
                        _a = getPermission(permissions), canViewWorkspace = _a.canViewWorkspace, canAnalyzeWorkspace = _a.canAnalyzeWorkspace, canManageWorkspace = _a.canManageWorkspace;
                        return [2 /*return*/, {
                                //disabled for tiger for now
                                canCreateReport: false,
                                canExportReport: false,
                                canUploadNonProductionCSV: false,
                                canManageACL: false,
                                canManageDomain: false,
                                canInviteUserToProject: false,
                                canCreateScheduledMail: false,
                                canListUsersInProject: false,
                                //based on group: VIEW
                                canAccessWorkbench: canViewWorkspace,
                                canExecuteRaw: canViewWorkspace,
                                //based on group: ANALYZE
                                canCreateVisualization: canAnalyzeWorkspace,
                                canManageAnalyticalDashboard: canAnalyzeWorkspace,
                                canCreateAnalyticalDashboard: canAnalyzeWorkspace,
                                canManageMetric: canAnalyzeWorkspace,
                                canManageReport: canAnalyzeWorkspace,
                                canRefreshData: canAnalyzeWorkspace,
                                //based on group: MANAGE
                                canManageProject: canManageWorkspace,
                                //NOTE: Data source MANAGE in future
                                canInitData: canManageWorkspace,
                            }];
                }
            });
        });
    };
    return TigerWorkspacePermissionsFactory;
}());
export { TigerWorkspacePermissionsFactory };
function getPermission(permissions) {
    var canViewWorkspace = hasPermission(permissions, "VIEW");
    var canAnalyzeWorkspace = hasPermission(permissions, "ANALYZE");
    var canManageWorkspace = hasPermission(permissions, "MANAGE");
    return {
        canViewWorkspace: canViewWorkspace,
        canAnalyzeWorkspace: canAnalyzeWorkspace,
        canManageWorkspace: canManageWorkspace,
    };
}
function hasPermission(permissions, need) {
    return permissions.indexOf(need) >= 0;
}
//# sourceMappingURL=index.js.map