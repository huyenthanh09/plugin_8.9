import { IUser, ObjRef } from "@gooddata/sdk-model";
import { AccessGranteeDetail, IAccessGrantee, IWorkspaceUser, IWorkspaceUserGroup, ShareStatus } from "@gooddata/sdk-backend-spi";
import { GranteeItem, IGranteeGroup, IGranteeGroupAll, IGranteeUser, IGranteeInactiveOwner, IAffectedSharedObject } from "./ShareDialogBase/types";
import { ISharedObject } from "./types";
/**
 * @internal
 */
export declare const mapWorkspaceUserToGrantee: (user: IWorkspaceUser, currentUserRef: ObjRef) => IGranteeUser;
/**
 * @internal
 */
export declare const mapWorkspaceUserGroupToGrantee: (userGroup: IWorkspaceUserGroup) => IGranteeGroup;
/**
 * @internal
 */
export declare const mapUserFullName: (user: IUser | IWorkspaceUser) => string;
/**
 * @internal
 */
export declare const mapOwnerToGrantee: (user: IUser, currentUserRef: ObjRef) => IGranteeUser;
/**
 * @internal
 */
export declare const mapUserToInactiveOwner: () => IGranteeInactiveOwner;
/**
 * @internal
 */
export declare const mapShareStatusToGroupAll: (shareStatus: ShareStatus) => IGranteeGroupAll | undefined;
/**
 * @internal
 */
export declare const mapGranteesToAccessGrantees: (grantees: GranteeItem[]) => IAccessGrantee[];
export declare const mapAccessGranteeDetailToGrantee: (accessGranteeDetail: AccessGranteeDetail, currentUserRef: ObjRef) => GranteeItem;
/**
 * @internal
 */
export declare const mapGranteesToShareStatus: (grantees: GranteeItem[], granteesToAdd: GranteeItem[], granteesToDelete: GranteeItem[]) => ShareStatus;
/**
 * @internal
 */
export declare const mapSharedObjectToAffectedSharedObject: (sharedObject: ISharedObject, owner: IGranteeUser | IGranteeInactiveOwner, isLockingSupported: boolean, isLeniencyControlSupported: boolean) => IAffectedSharedObject;
//# sourceMappingURL=shareDialogMappers.d.ts.map