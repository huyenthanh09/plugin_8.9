// (C) 2022 GoodData Corporation
import { __awaiter, __generator } from "tslib";
import { useCancelablePromise } from "@gooddata/sdk-ui";
import { getElementTotalCount, getObjRef, getValidElementsFilters } from "../../utils/AttributeFilterUtils";
import stringify from "json-stable-stringify";
/**
 * Gets the number of all elements available for the attribute.
 */
export var useOriginalTotalElementsCount = function (props) {
    var context = props.context, ownProps = props.ownProps;
    return useCancelablePromise({
        promise: function () { return __awaiter(void 0, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, getElementTotalCount(context.workspace, context.backend, getObjRef(context.filter, context.identifier), "", // we need to get all available elements count in every case possible
                    getValidElementsFilters(ownProps.parentFilters, ownProps.parentFilterOverAttribute))];
            });
        }); },
    }, [
        context.backend,
        context.workspace,
        context.identifier,
        stringify(ownProps.parentFilters),
        context.filter,
    ]);
};
//# sourceMappingURL=useOriginalTotalElementsCount.js.map