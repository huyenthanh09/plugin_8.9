import { __awaiter, __generator } from "tslib";
// (C) 2022 GoodData Corporation
import { useMemo } from "react";
import { useCancelablePromise } from "@gooddata/sdk-ui";
import { getObjRef } from "../../utils/AttributeFilterUtils";
import stringify from "json-stable-stringify";
/**
 * Fetches the attribute related to the Attribute Filter needed to acquire attribute title.
 */
export var useAttribute = function (context) {
    var filterObjRef = useMemo(function () { return getObjRef(context.filter, context.identifier); }, [context.filter, context.identifier]);
    return useCancelablePromise({
        promise: function () { return __awaiter(void 0, void 0, void 0, function () {
            var attributes, displayForm;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        attributes = context.backend.workspace(context.workspace).attributes();
                        return [4 /*yield*/, attributes.getAttributeDisplayForm(filterObjRef)];
                    case 1:
                        displayForm = _a.sent();
                        return [2 /*return*/, attributes.getAttribute(displayForm.attribute)];
                }
            });
        }); },
    }, [stringify(filterObjRef), context.workspace, context.backend, context.identifier]);
};
//# sourceMappingURL=useAttribute.js.map