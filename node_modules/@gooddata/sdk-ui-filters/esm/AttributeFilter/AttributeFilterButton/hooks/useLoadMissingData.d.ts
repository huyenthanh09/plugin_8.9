import { IElementsQueryResult } from "@gooddata/sdk-backend-spi";
import { IAttributeFilter } from "@gooddata/sdk-model";
import { AttributeFilterButtonContextProps, AttributeFilterButtonHookOwnProps } from "./types";
import { IAttributeFilterButtonState } from "./useAttributeFilterButtonState";
interface IUseLoadMissingDataProps {
    context: Pick<AttributeFilterButtonContextProps, "backend" | "workspace" | "filterObjRef">;
    state: Pick<IAttributeFilterButtonState, "validOptions" | "needsReloadAfterSearch" | "searchString" | "selectedFilterOptions" | "appliedFilterOptions" | "offset" | "limit">;
    onLoadMissingDataSuccess: (elements: IElementsQueryResult, parentFilters: IAttributeFilter[], isElementsByRef: boolean) => void;
    ownProps: AttributeFilterButtonHookOwnProps;
}
/**
 * Fetches missing attribute elements on scrolling.
 */
export declare const useLoadMissingData: (props: IUseLoadMissingDataProps) => import("@gooddata/sdk-ui").UseCancelablePromiseState<IElementsQueryResult, any>;
export {};
//# sourceMappingURL=useLoadMissingData.d.ts.map